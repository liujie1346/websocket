<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <!-- TRACE < DEBUG < INFO < WARN < ERROR -->
    <contextName>kingLogBack</contextName>
    <property name="log_path" value="C:/Users/liujie/Desktop/logback" />
    <!--
        子节点<appender>：负责写日志的组件。
            ConsoleAppender输出日志到控制台
            <encoder>：对日志进行格式化,%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符
            <target>：字符串System.out(默认)或者System.err
     -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 阈值过滤，就是log行为级别过滤，debug及debug以上的信息会被打印出来 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!--
        ch.qos.logback.core.FileAppender输出到文件
        RollingFileAppender滚动日志文件
     -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--<file>${log_path}/myApp.log</file>-->
        <!-- 配置滚动的策略，按天新建log日志 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志名称的格式 -->
            <fileNamePattern>${log_path}/logFileWS.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <!-- 保存的最长时间：天数 -->
            <MaxHistory>30</MaxHistory>
            <!-- 基于大小和时间，这个可以有，可以没有 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 100MB -->
                <!-- 当一个日志大小大于10KB，则换一个新的日志。日志名的%i从0开始，自动递增 -->
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="org.springframework" level="INFO"/>
    <logger name="java.sql.Statement" level="INFO" />
    <logger name="java.sql.PreparedStatement" level="INFO" />
    <!-- mapper 文件的包路径 -->
    <logger name="com.websocket.dao" level="INFO" />

    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>